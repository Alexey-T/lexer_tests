// with declared type, declared type arguments
var x: Array<bool> = map<int, bool>([1, 3, -4, 2], isPositive);
// with inferred type, declared type arguments
var y = map<int, bool>([1, 3, -4, 2], isPositive);
// with declared type, inferred type arguments
var z: Array<bool> = map([1, 3, -4, 2], isPositive);
// with inferred type, inferred type arguments
var w = map([1, 3, -4, 2], isPositive);

def map<A, B>(array: Array<A>, func: A -> B) -> Array<B> {
	if (array == null) return null;
	var max = array.length, r = Array<B>.new(max);
	for (i = 0; i < max; i++) r(i) = func(array(i));
	return r;
}
def isPositive(a: int) -> bool {
	return a > 0;
}
