// A representation of a person's information
class Person {
	def name: string;
	var age: int;
	var employer: string;
	var manager: Person;
	var alive: bool;
	new(name, age, employer, manager, alive) {}
}
// demonstrates use of partial application to reduce redundancy in construction
def main() {
	// create Larry, the CEO
	var page = Person.new("Larry Page", 39, "Google", null, true);
	// a function to make Googlers (who default to Larry)
	var googler = Person.new(_, _, "Google", page, true);
	
	// some Googlers
	var susan = googler("Susan", 27);
	var ken = googler("Ken", 37);
	var thomas = googler("Thomas", 30);

	// a function to create a bunch of deceased people
	var dead = Person.new(_, 0, "", null, false);

	var bob = dead("Bob");
	var kelly = dead("Kelly");

	// print all our persons
	for (p in [page, susan, ken, thomas, bob, kelly]) print(p);
}
def print(p: Person) {
	// print a person
	System.puts(p.name);
	System.puts(" ");
	System.puti(p.age);
	System.puts(" ");
	if (p.alive) {
		System.puts(p.employer);
		System.puts(" ");
		System.puts(if(p.manager != null, p.manager.name, ""));
	} else {
		System.puts("[deceased]");
	}
	System.ln();
}
