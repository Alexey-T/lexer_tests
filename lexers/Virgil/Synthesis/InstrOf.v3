// Assume that Register and Assembler are from a separate library
class Register {
}
class Assembler {
	def add(a: Register, b: Register);
	def sub(a: Register, b: Register);
	def load(a: Register);
}
// define a base instruction class for all instructions
class Instr {
	def name: string;
	new(name);
	def emit(asm: Assembler);
}
class InstrOf<T> extends Instr {
	def param: T;
	def func: (Assembler, T) -> void;
	new(name: string, param, func) super(name) { }
	def emit(asm: Assembler) {
		func(asm, param);
	}
}
// TODO: show the usefulness in the code generator
