-- Mersenne Twister random number generator, implementation taken from
-- http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/CODES/mt19937ar.c

local MT19937_N: uint32 <comptime> = 624
local MT19937_M: uint32 <comptime> = 397

local mt19937 = @record{
  i: uint32,
  v: [MT19937_N]uint32
}

-- initialize random state with a seed
function mt19937:seed(seed: uint32)
  self.i = MT19937_N
  self.v[0] = seed & 0xffffffff
  for i=1_u32,<MT19937_N do
    self.v[i] = (1812433253 * (self.v[i-1] ~ (self.v[i-1] >> 30)) + i)
    self.v[i] = self.v[i] & 0xffffffff
  end
end

-- generates a random number on [0, 0xffffffff]
function mt19937:random_uint32()
  local MAG01: [2]uint32 = {0x0, 0x9908b0df}
  local MASK = @enum(uint32) { LOWER = 0x7fffffff, UPPER = 0x80000000 }
  local N <comptime>, M <comptime> = MT19937_N, MT19937_M
  local y
  if self.i >= N then
    for j=0_u32,<N-M do
      y = (self.v[j] & MASK.UPPER) | (self.v[j+1] & MASK.LOWER)
      self.v[j] = self.v[j+M] ~ (y >> 1) ~ MAG01[y & 0x1]
    end
    for j=N-M,<N-1 do
      y = (self.v[j] & MASK.UPPER) | (self.v[j+1] & MASK.LOWER)
      self.v[j] = self.v[j + (M - N)] ~ (y >> 1) ~ MAG01[y & 0x1]
    end
    y = (self.v[N-1] & MASK.UPPER) | (self.v[0] & MASK.LOWER)
    self.v[N-1] = self.v[M-1] ~ (y >> 1) ~ MAG01[y & 0x1]
    self.i = 0
  end
  y = self.v[self.i]
  self.i = self.i + 1
  y = y ~ (y >> 11)
  y = y ~ ((y << 7) & 0x9d2c5680)
  y = y ~ ((y << 15) & 0xefc60000)
  y = y ~ ((y >> 18))
  return y
end

-- generates a random number on [0,1) interval
function mt19937:random_float32()
  return self:random_uint32() * (1_f32 / 4294967296_f32)
end

-- generates a random number on [0,1) with 53-bit resolution
function mt19937:random_float64()
  local a = self:random_uint32() >> 5
  local b = self:random_uint32() >> 6
  return (a * 67108864_f64 + b) * (1_f64 / 9007199254740992_f64)
end

-- pre initialized mersenne (faster startup)
local default_mt19937: mt19937 = {
  i = 0,
  v = {
    0x5a682c69,0x1d6a2d67,0x3f086e20,0xeba44ff7,0xadad9a48,0xe11f0603,0x60f8b793,0x30a445b6,
    0x16bca70d,0x8ad2980b,0x499cf462,0x90f87908,0xe7ba4ad5,0xf4d01b69,0x946206b1,0x468d2d4f,
    0x1fab9d97,0x9c6d046f,0x669a2f4a,0x8f2cb385,0x102bb9ea,0xa08abc20,0x70380f20,0x1350a5ad,
    0x47f5f538,0x4918d858,0x8ec28e7d,0x532dca4d,0x29d61848,0x658c56dd,0x683e5454,0x7b720a6d,
    0x88dea446,0xa6951b39,0x906a3b8f,0x06fdbeee,0x085a7712,0x6f0f5481,0x8bb6f7a3,0xd10a23a0,
    0x607eacf8,0x711c6137,0x753b3587,0x11ceb93c,0x971a7dab,0x9f89a094,0x725185b2,0xbbd75637,
    0x3ca9681d,0x568b9900,0x7af2fb9e,0x3b3d20d9,0x6abec207,0xa4e0c0db,0x32972964,0xb5ace8dd,
    0x6932ace4,0x4214cfca,0xe441a3cf,0xf3b411be,0xb96738cb,0x8aa40785,0x34a490e9,0x40d0b9f8,
    0x022ff6fe,0x94303ae5,0xa7501ad2,0x490afc22,0xbab805c9,0x3de9ec94,0x8088a69b,0x8bf8f944,
    0x999088d0,0xfa2f7dac,0xb7279793,0x914f9f5a,0xc4d90553,0x96a11ce3,0x176a35ab,0x5387e883,
    0xca563fa1,0xa5db91fb,0x23088432,0x32dc9865,0x4afb9465,0x0c7235dd,0x32e2441d,0xae8fbccc,
    0x7caa0e2f,0xc4ecc9fe,0xc7ab5825,0x2ae88b95,0x72dc8aff,0xa3c8e632,0xfb6276cb,0x6f071a25,
    0x73d8a556,0xc732b65e,0xdf2c22e6,0xbc7d8512,0xee1b607c,0x44e4fc48,0x044e9990,0x82a9e1f1,
    0xb981df7c,0x40759f27,0xe8c36214,0x33d60e9d,0x6d170870,0xf395c2a5,0x9bf1fe0a,0xd3534d3c,
    0x3cb67a4f,0xe30b6e30,0x5eec6dbc,0x04d33153,0x390d2182,0xc5396921,0x13214bbd,0x068d2429,
    0x057ed737,0xe767218d,0xadb4cfcf,0xdba4ac4b,0x7a5e327c,0xd92ed926,0x58a6c7f6,0x7de1a23f,
    0xdc91ab7c,0x22c963be,0x53e9134c,0xe6a1a003,0xb5af0dab,0xc2481470,0x557dffbe,0x608f7f57,
    0xbde11bab,0x24acbf91,0x21be9fe9,0x92452d27,0x73dd5434,0x81c05d98,0xf89435ab,0xf8fa7cd1,
    0x75413b45,0x6926435f,0xc54ba497,0xf8fbfcfa,0x2d606cc7,0x564f1ab2,0xee9ae566,0x4d4f3c80,
    0x0bb8c325,0xe277d177,0x7ead84ad,0x001c2453,0xe4514489,0xcb71f1f6,0xb594fdf5,0x216009bf,
    0xd9d61aeb,0x12de7612,0x5c997eec,0x7e863a52,0x4bbf7cf6,0x7e4c85db,0x2695ef3a,0xa0964e76,
    0x19b3b25d,0x07202c78,0x6cb17c4e,0xd3a1108c,0x173244a5,0x8f1ad84e,0x604e38d8,0x495eb9dc,
    0x106f117d,0xcac4bd04,0x5301b490,0x4f69159b,0xfd6965c8,0xbbb256f6,0x966cc907,0x8705f19c,
    0x73a3237b,0xa5f04d22,0x781b81ce,0x14a194a4,0xd7379317,0x8855b571,0xafbfa191,0xbf10c267,
    0x9c8e1532,0x6b6aba02,0x8a118cc0,0x05b8f340,0xd0c3e267,0xd7b94ded,0xd31ca506,0xc9608edc,
    0x53e15817,0x546334ba,0xa8b29c70,0xe54dc8a4,0x35f388e9,0x2d2adada,0x44276116,0xd62b2a72,
    0x95735192,0x7e7b2261,0xe3d32261,0x1ded99a9,0x108fa08a,0x590ddcde,0xa65d322a,0xa189d2bd,
    0xced49fba,0xd3c97fff,0xb0daaf29,0x77ff8200,0xcba0a6c3,0x4d621988,0x31fece7b,0xfb3c6afe,
    0x7695d863,0x412e63b4,0x4ee8e5e9,0xfafd79f1,0xb78de9cd,0x7eff6817,0x6ae51c0e,0x4b6e681e,
    0x779c275d,0xd6893140,0xe6b6bdff,0xe3e82069,0x178838e9,0x862c0c68,0xe9858dc6,0x2cd3dbdf,
    0xce94005d,0x1eb7e2c1,0x31e4669d,0xc444b723,0xe1816e90,0x81ef76f6,0x5564857f,0x846677f2,
    0xc23a036d,0xae0255d4,0x04c88e8a,0x33dfa944,0x44844645,0xdce9d3f6,0xd8dd31c4,0x997a2cb7,
    0xbd002c87,0xa852abcc,0x209f8bbf,0xe72d8787,0xdfc784cc,0x5380ff29,0x3a02c71d,0x89e42ad8,
    0x2994569a,0x89b3bf8f,0x60eb969e,0x4d4517b3,0x2dc9225c,0x481fe939,0x7d24aaa9,0x65f17fea,
    0x67448008,0x24a2b921,0x07b97760,0x50b1d48a,0x625862d0,0xc1e2250c,0xa4f029ea,0xe44f1982,
    0xddbb13fd,0xa2d8f086,0xf2898d31,0x47f22e4e,0x7a9e8399,0x08e0d08b,0x3c613730,0x3977e423,
    0x92b4e273,0x73d87aed,0x967008ad,0x95c27c97,0xb1e96ff6,0x34962ac9,0x14c203dd,0xc385e803,
    0x15d0436d,0x164165c0,0xf3337c85,0x71bb7207,0x34edca50,0x6e58e0ff,0xa846c6b3,0x10f8d05e,
    0xcd3ac069,0x1a23e8a0,0xfe3340ac,0x9873ef0e,0x12b2dd81,0x7650f57d,0x8664d37c,0x6d01dfdf,
    0x34121a6c,0xd0a1317d,0x1a7637eb,0x15b9e4f4,0xe7676946,0x388fc7b4,0x9401532f,0x155b3eeb,
    0xa9b06305,0xb6320224,0x9fdc2a7d,0x543251b3,0xc63546f0,0xfb9d31af,0xba4cf731,0xb09f5a72,
    0xd6722abd,0xe21a3e01,0x094ea145,0x41b53689,0xc9d187c0,0x587bc9ba,0xdbe77d95,0x1566c266,
    0xdd3d84ac,0x20d8793d,0x1b3e3d75,0xdae4457f,0x43496e1a,0x5b3183e8,0xe8b604b8,0x3de743b2,
    0x266a2eff,0x6d563810,0x2b4bd988,0xeed61268,0x04d8f4c1,0xb70f7161,0x617345c1,0x41618e45,
    0xae44265d,0xf7fe14c3,0xc27cb4e3,0xac7e3a00,0x4d067308,0xd54160a0,0xf5edb386,0x8db7ec86,
    0xa2c133b3,0xc0c99f37,0x0eeef9ec,0x7e44ddbe,0x2c27028a,0x16ac90b7,0xbfaa0ea7,0xed09a201,
    0xc78cdeba,0xe4deda88,0x0485472d,0x12cc2c61,0x4d2a69fe,0x5444abba,0xe692fd12,0x67b21e6e,
    0xa9bc8f69,0xd59a5a37,0x13ae2c80,0x1be3939b,0x5411e81c,0x6c942c6e,0xb4706422,0xb238d842,
    0x58593efe,0x4c85f7cb,0x8f389de6,0xb00db3ee,0x44e2ee1b,0x27e53d07,0x3f4ef09a,0x5f8a755a,
    0xc989e8a4,0x14a6ffdf,0x8ae0b2a7,0xcd4bd10a,0x38d32e59,0xc25789ef,0x0402c2b1,0xe1f8b073,
    0x5c577761,0xb5bed097,0x6e0d7f90,0xfe2c977f,0x5edfe720,0xa67c4050,0xeaf0dd42,0xf3a0f4e2,
    0x06e12677,0xded2744f,0x0d897776,0xeb0916cd,0xa396d5cc,0x08c0bfd4,0x2fd4bb60,0x020c28f3,
    0x819373bb,0x8ceb2912,0xc9e9f0a9,0x0ba1ab27,0x7ab60f35,0xef96e9e1,0x2ccca7cb,0x4c3fd1e5,
    0x86f2993e,0xee884612,0xddb39eb0,0x09eb88c0,0x808b6f21,0x6931a86d,0x913d49dd,0x9d04a371,
    0x82c028de,0x712ff556,0xa5af2643,0x4489a531,0x6dd80418,0xcb90cdf9,0x3cdc3d2f,0xaec87439,
    0xba0e98dc,0xe8986583,0x19e565e8,0xef914bea,0xd09626de,0xfbeae556,0xf1936925,0x271a7485,
    0xac26978f,0x2a60aa62,0x27828c78,0xa80d86f0,0x00fd9d42,0x6227d818,0x8781dcb7,0x4b11a08b,
    0xa7770914,0xa1dd7a19,0x4edfe29e,0x002d8996,0xe7bc6ff0,0x79305c29,0xdb2eaf4e,0xde7f1dae,
    0xaf3c2efb,0x2552b62c,0x5bf35eff,0x3b614423,0x833dff71,0xfa88c641,0x88599f4b,0xfd79f764,
    0x52cc1dbc,0xaeb3aea3,0x5c54fd9a,0x2550e6dc,0x5187f9b2,0x0bd2d866,0x948b8190,0x0caf10a7,
    0x0b2ca056,0x2a97d542,0x7ec4c3c1,0xbdc40318,0x716e435b,0xae76196d,0xe047ae40,0xca697fbb,
    0x905d1374,0xb94aa133,0xeccb2880,0x8aa42c25,0x35ee3786,0x3700ea54,0x97704762,0xfa7fa016,
    0x2a350736,0xb0973547,0x3f9f6c76,0x3c7342e3,0xdd1f28b2,0x7cda2e3c,0x2c2218d5,0xe41bec26,
    0xa7ec967b,0x09e4db97,0x647b55ba,0x0407014c,0xa3ee4991,0xf5ccdb23,0xf5120688,0x2e4e59e1,
    0xd17793e9,0xeddb0d30,0x5da0b969,0x7b49e5e7,0xa1dd2106,0x40ab56ec,0x9867049b,0xb633a636,
    0xf20e793f,0xc41f7f7d,0xeec382d0,0xbd632645,0xbd144f66,0xc8d4cf41,0x4046e409,0xff227a2a,
    0x3c022a90,0x99768367,0x1cc1163e,0x9ba6ee26,0xefa35baf,0x9c581b2c,0xf2ae07ad,0xdec752f6,
    0x374ea111,0x8d7dc8d5,0xea5d34ba,0xd59aa334,0x13eff94e,0xd67dd776,0x69a2afc5,0x283ac62b,
    0x31e24f49,0x857022cd,0xf4bae494,0xa136d137,0x7adc28ca,0x230d4eb8,0xcb127839,0x205fc1c5,
    0x7387cb16,0x5b997884,0x5fb0a3e1,0xb6a70bca,0xf55996bd,0x756719ed,0x1f5e27fe,0x88818d66,
    0xeda273f3,0xc4da09d2,0x940792a5,0x19b6824e,0x2ff429e3,0x0aea8bc4,0x4a6b3850,0xdd1cabbb,
    0x5b040d6d,0xe8bf6c2e,0xf83fe0dd,0xdb1edd85,0x9aebfc1d,0x3992a071,0x30047540,0x957f6d5b,
    0xaa188a6d,0x5c503d1c,0x5bda3440,0xe6fcaeeb,0x5807f2ec,0xf7310930,0xcd7d31b0,0x8f5ed87c,
    0xd45b53ee,0x9a1935d6,0xd822f04b,0xb71820b4,0x5ac56e01,0xcca8a752,0x542466a1,0x91058240,
    0xd74f8d64,0x4754be84,0x5778524b,0x91fd7134,0x2f60a1c2,0x85aa2354,0x41d526a0,0x6bc3e1af,
    0x64144d6e,0x02d39925,0xb1ca1cab,0x03cbcb94,0x3085e715,0x6ed64d1b,0x5e10223f,0x2ea88c55,
    0x195ef225,0x6171c7e8,0x8059526f,0xcdfdd084,0x6bab9e35,0x19cea822,0xb26b0f63,0x21a1be6b,
    0x6950c67b,0x1e8b65bb,0x062fced2,0xd9ff2d7a,0xc6772631,0x4f8cf7a1,0xfb13348d,0x8cef88b2,
  }
}

print(default_mt19937:random_float32())
print(default_mt19937:random_float32())
print(default_mt19937:random_float32())

print(default_mt19937:random_float64())
print(default_mt19937:random_float64())
print(default_mt19937:random_float64())
