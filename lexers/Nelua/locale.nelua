--[[
Library that imports symbols from the `<locale.h>` header according to C11 specifications.

For a complete documentation about the functions,
see [C locale documentation](https://www.cplusplus.com/reference/clocale/).
]]

require 'C'

global C.lconv: type <cimport,cinclude'<locale.h>',ctypedef> = @record{
  decimal_point: cstring,
  thousands_sep: cstring,
  grouping: cstring,
  int_curr_symbol: cstring,
  currency_symbol: cstring,
  mon_decimal_point: cstring,
  mon_thousands_sep: cstring,
  mon_grouping: cstring,
  positive_sign: cstring,
  negative_sign: cstring,
  int_frac_digits: cchar,
  frac_digits: cchar,
  p_cs_precedes: cchar,
  p_sep_by_space: cchar,
  n_cs_precedes: cchar,
  n_sep_by_space: cchar,
  p_sign_posn: cchar,
  n_sign_posn: cchar,
  int_p_cs_precedes: cchar,
  int_p_sep_by_space: cchar,
  int_n_cs_precedes: cchar,
  int_n_sep_by_space: cchar,
  int_p_sign_posn: cchar,
  int_n_sign_posn: cchar
}

function C.setlocale(category: cint, locale: cstring): cstring <cimport,cinclude'<locale.h>'> end
function C.localeconv(): *C.lconv <cimport,cinclude'<locale.h>'> end

-- Constants

global C.LC_ALL: cint <const,cimport,cinclude'<locale.h>'>
global C.LC_COLLATE: cint <const,cimport,cinclude'<locale.h>'>
global C.LC_CTYPE: cint <const,cimport,cinclude'<locale.h>'>
global C.LC_MONETARY: cint <const,cimport,cinclude'<locale.h>'>
global C.LC_NUMERIC: cint <const,cimport,cinclude'<locale.h>'>
global C.LC_TIME: cint <const,cimport,cinclude'<locale.h>'>

return C
