// Copyright (c) 2018 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
//
// WSO2 Inc. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
import ballerina/grpc;
import ballerina/log;

listener grpc:Listener ep5 = new (9095);
@grpc:ServiceDescriptor {
    descriptor: ROOT_DESCRIPTOR_5,
    descMap: getDescriptorMap5()
}
service HelloWorld98 on ep5 {
    resource function hello(grpc:Caller caller, string name) {
        log:printInfo("name: " + name);
        string message = "Hello " + name;
        grpc:Error? err = ();
        if (name == "invalid") {
            err = caller->sendError(grpc:ABORTED, "Operation aborted");
        } else {
            err = caller->send(message);
        }
        if (err is grpc:Error) {
            log:printError(err.reason(), err);
        }
        checkpanic caller->complete();
    }

    resource function testInt(grpc:Caller caller, string age) {
        log:printInfo("age: " + age);
        int displayAge = 0;
        if (age == "") {
            displayAge = -1;
        } else {
            displayAge = 1;
        }
        grpc:Error? err = caller->send(displayAge);
        if (err is grpc:Error) {
            log:printError(err.reason(), err);
        } else {
            log:printInfo("display age : " + displayAge.toString());
        }
        checkpanic caller->complete();
    }

    resource function testFloat(grpc:Caller caller, float salary) {
        log:printInfo("gross salary: " + salary.toString());
        string netSalary = "salary";
        grpc:Error? err = caller->send(netSalary);
        if (err is grpc:Error) {
            log:printError(err.reason(), err);
        } else {
            log:printInfo("net salary : " + netSalary);
        }
        checkpanic caller->complete();
    }
}

const string
function getDescriptorMap5() returns map<string> {
    return {
        "HelloWorld98.proto":

        ,

        "google/protobuf/wrappers.proto":

        ,

        "google/protobuf/empty.proto":
        "0A1B676F6F676C652F70726F746F6275662F656D7074792E70726F746F120F676F6F676C652E70726F746F62756622070A05456D70747942760A13636F6D2E676F6F676C652E70726F746F627566420A456D70747950726F746F50015A276769746875622E636F6D2F676F6C616E672F70726F746F6275662F7074797065732F656D707479F80101A20203475042AA021E476F6F676C652E50726F746F6275662E57656C6C4B6E6F776E5479706573620670726F746F33"

    };
}
