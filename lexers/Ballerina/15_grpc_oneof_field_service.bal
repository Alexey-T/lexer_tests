// Copyright (c) 2018 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
//
// WSO2 Inc. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

import ballerina/grpc;
import ballerina/io;

@grpc:ServiceDescriptor {
    descriptor: ROOT_DESCRIPTOR_15,
    descMap: getDescriptorMap15()
}
service OneofFieldService on new grpc:Listener(9105) {

    resource function hello(grpc:Caller caller, Request1 value) {
        io:println("################################################################");
        io:println(value);
        string request = "";
        if (value.name is Request1_FirstName) {
            var conv = typedesc<Request1_FirstName>.constructFrom(value.name);
            if (conv is Request1_FirstName) {
                request = conv.first_name;
            }
        } else {
            Request1_LastName|error conv = typedesc<Request1_LastName>.constructFrom(value.name);
            if (conv is Request1_LastName) {
                request = conv.last_name;
            }
        }
        Response1 response = {message: "Hello " + request};
        io:println(response);
        checkpanic caller->send(response);
        checkpanic caller->complete();
    }

    resource function testOneofField(grpc:Caller caller, ZZZ req) {
        checkpanic caller->send(req);
        checkpanic caller->complete();
    }
}

type Request1 record {
    Other other;
    Name name;
};

public type Other Request1_Age|Request1_Address|Request1_Married;

type Request1_Age record {
    int age;
};

type Request1_Address record {
    Address1 address;
};

type Request1_Married record {
    boolean married;
};

public type Name Request1_FirstName|Request1_LastName;

type Request1_FirstName record {
    string first_name;
};

type Request1_LastName record {
    string last_name;
};

type Address1 record {
    Code code;
};

public type Code Address1_HouseNumber|Address1_StreetNumber;

type Address1_HouseNumber record {
    int house_number;

};

type Address1_StreetNumber record {
    int street_number;
};

type Response1 record {
    string message;
};

type ZZZ record {
    float aa = 1.2345;
    float bb = 1.23;
    int cc = 10;
    int dd = 11;
    int ee = 12;
    int ff = 13;
    int gg = 14;
    boolean hh = true;
    string ii = "Test";
    AAA jj = {};
    byte[] kk = [24, 25];
    Value value;
};

public type Value ZZZ_OneA|ZZZ_OneB|ZZZ_OneC|ZZZ_OneD|ZZZ_OneE|ZZZ_OneF|ZZZ_OneG|ZZZ_OneH|ZZZ_OneI|ZZZ_OneJ|ZZZ_OneK;

type ZZZ_OneA record {
    float one_a;
};

type ZZZ_OneB record {
    float one_b;
};

type ZZZ_OneC record {
    int one_c;
};

type ZZZ_OneD record {
    int one_d;
};

type ZZZ_OneE record {
    int one_e;
};

type ZZZ_OneF record {
    int one_f;
};

type ZZZ_OneG record {
    int one_g;
};

type ZZZ_OneH record {
    boolean one_h;
};

type ZZZ_OneI record {
    string one_i;
};

type ZZZ_OneJ record {
    AAA one_j;
};

type ZZZ_OneK record {
    byte[] one_k;
};

type AAA record {
    string aaa = "aaa";
};

const string ROOT_DESCRIPTOR_15 =

function getDescriptorMap15() returns map<string> {
    return {
        "oneof_field_service.proto

    };
}
