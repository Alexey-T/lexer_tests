
(* -----------------------------------------------------------------------1- *)
(* This file is part of the Schutz semantic editor.                          *)
(* Copyright 1988..2017, Rodney M. Bates.                                    *)
(* rodney.m.bates@acm.org                                                    *)
(* Licensed under the MIT License.                                           *)
(* -----------------------------------------------------------------------2- *)

MODULE Ldl1Tok 

; IMPORT LbeStd 

(* VISIBLE *) 
; PROCEDURE ToText ( Tok : LbeStd . TokTyp ) : TEXT 

  = BEGIN
      CASE Tok 
      OF Ident => RETURN "Ident"
      | Integer => RETURN "Integer"
      | String => RETURN "String"
      | Nil => RETURN "Nil" 
      | AsClassRule => RETURN "AsClassRule"
      | AsFixedRule => RETURN "AsFixedRule"
      | AsOptChild => RETURN "AsOptChild"
      | AsPlusRule => RETURN "AsPlusRule"
      | AsReqdChild => RETURN "AsReqdChild"
      | AsStarRule => RETURN "AsStarRule"
      | AsVarTermRule => RETURN "AsVarTermRule"
      | CsAltRule => RETURN "CsAltRule"
      | CsFixedRule => RETURN "CsFixedRule"
      | CsOptChild => RETURN "CsOptChild"
      | CsOptChildCs => RETURN "CsOptChildCs"
      | CsPlusRule => RETURN "CsPlusRule"
      | CsPluralRule => RETURN "CsPluralRule"
      | CsReqdChild => RETURN "CsReqdChild"
      | CsStarRule => RETURN "CsStarRule"
      | DontCare => RETURN "DontCare"
      | FsChildPlain => RETURN "FsChildPlain"
      | FsCondMember => RETURN "FsCondMember"
      | FsCondNonempty => RETURN "FsCondNonempty"
      | FsCondPlural => RETURN "FsCondPlural"
      | FsCondPresent => RETURN "FsCondPresent"
      | FsCondAbsent => RETURN "FsCondAbsent" 
      | FsCondEmpty  => RETURN "FsCondEmpty " 
      | FsFillSubtree => RETURN "FsFillSubtree"
      | FsFixedDefaultRule => RETURN "FsFixedDefaultRule"
      | FsFixedFillRule => RETURN "FsFixedFillRule"
      | FsFixedHorizRule => RETURN "FsFixedHorizRule"
      | FsFixedVertRule => RETURN "FsFixedVertRule"
      | FsDefaultSubtree => RETURN "FsDefaultSubtree"
      | FsChildCase => RETURN "FsChildCase" 
      | FsHorizSubtree => RETURN "FsHorizSubtree"
      | FsListDefaultRule => RETURN "FsListDefaultRule"
      | FsListFillRule => RETURN "FsListFillRule"
      | FsListHorizRule => RETURN "FsListHorizRule"
      | FsListVertRule => RETURN "FsListVertRule"
      | FsVertSubtree => RETURN "FsVertSubtree"
      | LanguageDefinition => RETURN "LanguageDefinition"
      | LineBreak => RETURN "LineBreak"
      | PrecLevelNone => RETURN "PrecLevelNone"
      | PrecLevelLeft => RETURN "PrecLevelLeft"
      | PrecLevelRight => RETURN "PrecLevelRight"
      | PrecRule => RETURN "PrecRule"
      | StartRule => RETURN "StartRule"
      | AsChildList => RETURN "AsChildList"
      | Concatenation => RETURN "Concatenation"
      | FormatterList => RETURN "FormatterList"
      | FsFixedChildList => RETURN "FsFixedChildList"
      | PrecLevels => RETURN "PrecLevels"
      | RuleList => RETURN "RuleList"
(*      | CsAtomPlusList => RETURN "CsAtomPlusList" *) 
      | Alternation => RETURN "Alternation"
      | IdentPlusList => RETURN "IdentPlusList"
      | AsChild => RETURN "AsChild"
      | AsListRule => RETURN "AsListRule"
      | AsRule => RETURN "AsRule"
      | CsChild => RETURN "CsChild"
      | CsChildCs => RETURN "CsChildCs"
      | CsListRule => RETURN "CsListRule"
      | CsRule => RETURN "CsRule"
      | Formatter => RETURN "Formatter"
      | FsChild => RETURN "FsChild"
   (* | FsChildCondFmt => RETURN "FsChildCondFmt" *) 
      | FsFixedChild => RETURN "FsFixedChild"
      | FsFixedRule => RETURN "FsFixedRule"
      | FsListRule => RETURN "FsListRule"
      | FsRule => RETURN "FsRule"
      | FsSubtree => RETURN "FsSubtree"
      | FsClass => RETURN "FsClass"
      | PrecLevel => RETURN "PrecLevel"
      | Rule => RETURN "Rule"
      | CsAtom => RETURN "CsAtom"
   (* | OptHoriz => RETURN "OptHoriz" *) 
      | Indenter => RETURN "Indenter" 
      | BolIndenter => RETURN "BolIndenter" 
      | PosIndenter => RETURN "PosIndenter" 
      | ParentIndenter => RETURN "ParentIndenter" 
      | BolPlusIndenter => RETURN "BolPlusIndenter" 
      | PosPlusIndenter => RETURN "PosPlusIndenter" 
      | ParentPlusIndenter => RETURN "ParentPlusIndenter" 
      | BolMinusIndenter => RETURN "BolMinusIndenter" 
      | PosMinusIndenter => RETURN "PosMinusIndenter" 
      | ParentMinusIndenter => RETURN "ParentMinusIndenter" 
      | FsSubtreeChild => RETURN "FsSubtreeChild" 

      | Colon => RETURN "Colon" 
      | ColonColon => RETURN "ColonColon" 
      | ColonColonStar => RETURN "ColonColonStar" 
      | ColonColonPlus => RETURN "ColonColonPlus" 
      | Dot => RETURN "Dot" 
   (* | ColonEquals => RETURN "ColonEquals" *) 
      | ColonColonEquals => RETURN "ColonColonEquals" 
      | ColonColonEqualsStar => RETURN "ColonColonEqualsStar" 
      | ColonColonEqualsPlus => RETURN "ColonColonEqualsPlus" 
      | Semicolon => RETURN "Semicolon" 
      | OpenBracket => RETURN "OpenBracket" 
      | CloseBracket => RETURN "CloseBracket" 
      | OpenBrace => RETURN "OpenBrace" 
      | CloseBrace => RETURN "CloseBrace" 
   (* | CloseBracePlus => RETURN "CloseBracePlus" *) 
      | Equals => RETURN "Equals" 
      | Stroke => RETURN "Stroke" 
      | DoubleStroke => RETURN "DoubleStroke" 
      | Arrow => RETURN "Arrow" 
      | ArrowStar => RETURN "ArrowStar" 
      | Underscore => RETURN "Underscore" 
      | Bang => RETURN "Bang" 
      | At => RETURN "At" 
      | Dollar => RETURN "Dollar" 
      | Circumflex => RETURN "Circumflex" 
      | OpenParen => RETURN "OpenParen" 
      | CloseParen => RETURN "CloseParen" 
      | RwABSENT => RETURN "RwABSENT " 
      | RwPRESENT => RETURN "RwPRESENT" 
      | RwEND => RETURN "RwEND" 
      | RwFILL => RETURN "RwFILL" 
      | RwHORIZ => RETURN "RwHORIZ" 
      | RwNONE => RETURN "RwNONE" 
      | RwNONEMPTY => RETURN "RwNONEMPTY" 
      | RwEMPTY => RETURN "RwEMPTY" 
      | RwLEFT => RETURN "RwLEFT" 
      | RwLDL => RETURN "RwLDL" 
      | RwMEMBER => RETURN "RwMEMBER" 
      | RwPLURAL => RETURN "RwPLURAL" 
      | RwNONPLURAL => RETURN "RwNONPLURAL" 
      | RwPREC => RETURN "RwPREC" 
      | RwRIGHT => RETURN "RwRIGHT" 
      | RwSTART => RETURN "RwSTART" 
      | RwVARTERM => RETURN "RwVARTERM" 
      | RwVERT => RETURN "RwVERT" 
      | RwVERSION => RETURN "RwVERSION" 
      | RwBUILD => RETURN "RwBUILD" 
      | RwNIL => RETURN "RwNIL" 
      | RwINDENT => RETURN "RwINDENT" 
      | RwINLINE => RETURN "RwINLINE" 
      | RwCASE => RETURN "RwCASE" 
      | RwSUFFIXES => RETURN "RwSUFFIXES" 
      | RwOF => RETURN "RwOF" 
      | RwELSE => RETURN "RwELSE" 

(*  
      | Ldl1 => RETURN "Ldl1"
      | Alternatives => RETURN "Alternatives"
      | Child => RETURN "Child"
      | ChildClass => RETURN "ChildClass"
      | ChildName => RETURN "ChildName"
      | Children => RETURN "Children"
      | Class => RETURN "Class"
      | ClassMembers => RETURN "ClassMembers"
      | ClassName => RETURN "ClassName"
      | ClosingName => RETURN "ClosingName"
      | Elements => RETURN "Elements"
      | Formatters => RETURN "Formatters"
      | IndentCode => RETURN "IndentCode"
      | LanguageName => RETURN "LanguageName"
      | Levels => RETURN "Levels"
      | Lhs => RETURN "Lhs"
      | ListChild => RETURN "ListChild"
      | Name => RETURN "Name"
      | Operators => RETURN "Operators"
      | Parents => RETURN "Parents"
      | Rhs => RETURN "Rhs"
      | Rules => RETURN "Rules"
      | Separators => RETURN "Separators"
      | StartName => RETURN "StartName"
*) 
      ELSE 
        RETURN "<UnknownLdlToken>"
      END (* CASE *) 
    END ToText  

; BEGIN 
  END Ldl1Tok 
. 

