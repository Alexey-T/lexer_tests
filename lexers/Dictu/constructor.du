/**
 * constructor.du
 *
 * Testing class constructors. Specifically optional args and implicit instance variables
 */
from UnitTest import UnitTest;

class TestClassConstructor < UnitTest {
    testClassConstructor() {
        const assertEquals = this.assertEquals;

        class Test {
            init(a, b) {
                assertEquals(a, 10);
                assertEquals(b, 20);
            }
        }

        Test(10, 20);
    }

    testClassConstructorDefault() {
        const assertEquals = this.assertEquals;

        class AnotherTest {
            init(a, b="test") {
                assertEquals(a, "dictu");
                assertEquals(b, "test");
            }
        }

        AnotherTest("dictu");
    }

    testClassConstructorProperty() {
        const assertEquals = this.assertEquals;

        class PropertyTest {
            init(var a, var b) {}
        }

        const obj = PropertyTest("test", [1, 2]);

        assertEquals(obj.a, "test");
        assertEquals(obj.b, [1, 2]);
    }

    testClassConstructorDefaultProperty() {
        const assertEquals = this.assertEquals;

        class PropertyTest {
            init(var a, var b) {}
        }

        const obj = PropertyTest("test", [1, 2]);

        class DefaultPropertyTest {
            init(var a = "test", var b = 10.5) {}
        }

        var newObj = DefaultPropertyTest();

        assertEquals(newObj.a, "test");
        assertEquals(newObj.b, 10.5);

        newObj = DefaultPropertyTest(1000);

        assertEquals(newObj.a, 1000);
        assertEquals(newObj.b, 10.5);

        newObj = DefaultPropertyTest({"test": 5}, obj);

        assertEquals(newObj.a, {"test": 5});
        assertEquals(newObj.b, obj);
    }
}

TestClassConstructor().run();