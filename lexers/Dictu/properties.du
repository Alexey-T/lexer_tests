/**
 * properties.du
 *
 * Testing class properties
 */
from UnitTest import UnitTest;

class Test {
    init() {
        this.x = 10;
    }

    change() {
        this.x = this.x + 10;
    }
}

class Inherit < Test {}

class TestClassProperties < UnitTest {
    testClassProperties() {
        const obj = Test();

        this.assertEquals(obj.x, 10);
        obj.change();
        this.assertEquals(obj.x, 20);
        obj.x += 10;
        this.assertEquals(obj.x, 30);
        obj.x -= 10;
        this.assertEquals(obj.x, 20);
        obj.x *= 10;
        this.assertEquals(obj.x, 200);
        obj.x /= 10;
        this.assertEquals(obj.x, 20);
    }

    testPropertyMethods() {
        const obj = Test();

        this.assertTruthy(obj.hasAttribute("x"));
        this.assertFalsey(obj.hasAttribute("y"));

        this.assertEquals(obj.getAttribute("x"), 10);
        this.assertEquals(obj.getAttribute("x", 50), 10);
        this.assertEquals(obj.getAttribute("y", 50), 50);

        obj.setAttribute("y", 10);
        this.assertTruthy(obj.hasAttribute("y"));
        this.assertEquals(obj.getAttribute("y"), 10);

        obj.setAttribute("x", 10);
        this.assertTruthy(obj.hasAttribute("x"));
        this.assertEquals(obj.getAttribute("x"), 10);
    }

    testClassProperty() {
        this.assertEquals(Test()._class, Test);
        this.assertEquals(Inherit()._class, Inherit);
    }

    testClassName() {
        this.assertEquals(Test._name, "Test");
        this.assertEquals(Inherit._name, "Inherit");
    }
}

TestClassProperties().run();