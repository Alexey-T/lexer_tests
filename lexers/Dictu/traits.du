/**
 * traits.du
 *
 * Testing traits
 */
from UnitTest import UnitTest;

trait MyTrait {
    hello(x) {
        return x;
    }

    attribute() {
        return "Hello {}".format(this.name);
    }
}

class MyClass {
    use MyTrait;

    init(name) {
        this.name = name;
    }
}

trait MyOtherTrait {
    test() {
        return 100 + 200;
    }
}

class MyOtherClass < MyClass {
    use MyOtherTrait;
}

trait MyDuplicateTrait {
    hello(x) {
        return x * x;
    }
}

class MyDuplicateClass < MyClass {
    use MyOtherTrait, MyDuplicateTrait; // Override the hello method
}

class MyDuplicateClassOverride < MyClass {
    use MyOtherTrait, MyDuplicateTrait; // Override the hello method

    // Override for a third time
    hello(x) {
        return x + x;
    }
}

class TestTraits < UnitTest {
    testTraitType() {
        this.assertType(MyTrait, "trait");
    }

    testTrait() {
        const myObject = MyClass("Jason");

        this.assertEquals(myObject.name, "Jason");
        this.assertEquals(myObject.hello(10), 10);
        this.assertEquals(myObject.attribute(), "Hello Jason");
    }

    testAnotherTrait() {
        const myOtherObject = MyOtherClass("Jason");

        this.assertEquals(myOtherObject.name, "Jason");
        this.assertEquals(myOtherObject.hello(10), 10);
        this.assertEquals(myOtherObject.attribute(), "Hello Jason");
        this.assertEquals(myOtherObject.test(), 300);
    }

    testDuplicateMethodsTrait() {
        const myDuplicateObject = MyDuplicateClass("Jason");

        this.assertEquals(myDuplicateObject.name, "Jason");
        this.assertEquals(myDuplicateObject.hello(10), 100);
        this.assertEquals(myDuplicateObject.attribute(), "Hello Jason");
        this.assertEquals(myDuplicateObject.test(), 300);
    }

    testOverride() {
        const myDuplicateOverrideObject = MyDuplicateClassOverride("Jason");

        this.assertEquals(myDuplicateOverrideObject.name, "Jason");
        this.assertEquals(myDuplicateOverrideObject.hello(10), 20);
        this.assertEquals(myDuplicateOverrideObject.attribute(), "Hello Jason");
        this.assertEquals(myDuplicateOverrideObject.test(), 300);
    }
}

TestTraits().run();