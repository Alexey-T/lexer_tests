/**
 * end.du
 *
 * Testing the Env functions:
 *    - get(), set(), clearAll(), readFile()
 *
 */
from UnitTest import UnitTest;

import Env;
import Path;
import System;

class TestEnvModule < UnitTest {
    testEnvGet() {
        this.assertEquals(Env.get("bad key"), nil);
        this.assertEquals(Env.get("bad key","optional value!!!"), "optional value!!!");
    }

    testEnvSet() {
        this.assertTruthy(Env.set("test", "test").success());
        this.assertEquals(Env.get("test"), "test");
        this.assertTruthy(Env.set("test", nil).success());
        this.assertEquals(Env.get("test"), nil);
    }

    testEnvClearAll() {
        if (System.platform != "windows") {
            this.assertTruthy(Env.set("test", "test").success());
            this.assertTruthy(Env.clearAll().success());
            this.assertEquals(Env.get("test"), nil);
        }
    }

    testEnvRead() {
        const result = Env.readFile(Path.dirname(__file__) + '/.env');
        this.assertEquals(Env.get("TEST"), "10");
        this.assertEquals(Env.get("INLINE"), "100");
        this.assertEquals(Env.get("IGNORE"), nil);
        this.assertEquals(Env.get("MALFORMED"), nil);

        this.assertFalsey(result.success());
        this.assertEquals(result.unwrapError(), "Malformed entry on line 5");
    }
}

TestEnvModule().run();
