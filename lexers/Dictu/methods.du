/**
 * toString.du
 *
 * Testing the class.methods() and instance.methods() method
 *
 * .methods() returns the a list of all public methods attached to a class
 */
from UnitTest import UnitTest;

class Test {
    init() {}

    someOtherFunc() {}

    static someStaticFunc() {}

    private somePrivateFunc() {}
}

class AnotherTest < Test {
    anotherFunc() {}

    private anotherPrivateFunc() {}
}

class TestMethods < UnitTest {
    const EXPECTED_METHODS = [
        "init",
        "someOtherFunc",
        "someStaticFunc"
    ];

    const EXPECTED_METHODS_INHERITANCE = [
        "init",
        "someOtherFunc",
        "someStaticFunc",
        "anotherFunc"
    ];

    testMethods() {
        this.assertEquals(Test.methods().len(), 3);

        TestMethods.EXPECTED_METHODS.forEach(def (method) => {
            this.assertTruthy(Test.methods().contains(method));
        });

        this.assertFalsey(Test.methods().contains("somePrivateFunc"));
    }

    testMethodsInheritance() {
        this.assertEquals(AnotherTest.methods().len(), 4);

        TestMethods.EXPECTED_METHODS_INHERITANCE.forEach(def (method) => {
            this.assertTruthy(AnotherTest.methods().contains(method));
        });

        this.assertFalsey(AnotherTest.methods().contains("somePrivateFunc"));
    }

    testMethodsInstance() {
        this.assertEquals(Test().methods().len(), 3);

        TestMethods.EXPECTED_METHODS.forEach(def (method) => {
            this.assertTruthy(Test().methods().contains(method));
        });

        this.assertFalsey(Test().methods().contains("somePrivateFunc"));
    }

    testMethodsInheritanceInstance() {
        this.assertEquals(AnotherTest().methods().len(), 4);

        TestMethods.EXPECTED_METHODS_INHERITANCE.forEach(def (method) => {
            this.assertTruthy(AnotherTest().methods().contains(method));
        });

        this.assertFalsey(AnotherTest().methods().contains("somePrivateFunc"));
    }
}

TestMethods().run();