set_pixel_size( WINDOW_XSIZE / 256 )
resize( get_screen(), WINDOW_XSIZE, WINDOW_YSIZE )

scr = get_screen()

t = 0

fn audio_callback( 
    $stream, 
    $userdata, 
    $channels, 
    $frames,
    $output_time_in_system_ticks, 
    $in_channels, 
    $latency_in_frames )
{
    $out = $channels[ 0 ]
    $i = 0 while $i < $frames
    {
	$out[ $i ] = 
	    ( t << 10 | t << 9 | t << 4 ) + t
	    + ( ( t << 12 & t << 2 | t << 5 ) - t )
	$i + 1
	t + 1
    }
    copy( buf, $channels[ 0 ] )
    ret( 1 )
}

buf = new( 256, 1, INT16 )
clean( buf )

set_audio_callback( audio_callback, 0, 8000, INT16, 1 )

rate1 = get_audio_sample_rate( 0 )
rate2 = get_audio_sample_rate( 1 )
logf( "Local (defined by the set_audio_callback()) sample rate: %d Hz\n", rate1 )
logf( "Global (defined in the global Pixilang preferences) sample rate: %d Hz\n", rate2 )
if rate1 != rate2
{
    logf( "%d != %d, so resampling will be enabled\n", rate1, rate2 )
}

while 1
{
    //clear()
    transp( 64 )
    pixi( scr, 0, -2 )
    transp( 255 )
    
    x = 0 while( x < 256 )
    {
	dot( x - 128, buf[ x ] / 512, GREEN )
	x + 1
    }
    
    while( get_event() ) { if EVT[ EVT_TYPE ] == EVT_QUIT { halt } }
    
    frame()
}

