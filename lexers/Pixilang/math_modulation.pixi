//1 - AM; 2 - FM; 3 - PM
MOD_TYPE = 2
GIF_EXPORT = 0

scr = new( 180, 180 )
xsize = get_xsize( scr )
ysize = get_ysize( scr )
hxsize = xsize div 2
hysize = ysize div 2
anim = clone( scr )
set_screen( scr )
create_anim( anim )
anim.fps = 20

min_wsize = WINDOW_XSIZE
if WINDOW_YSIZE < min_wsize { min_wsize = WINDOW_YSIZE }
set_pixel_size( min_wsize / xsize )

load_font()

caption_ysize = 24
sector_ysize = ( ysize - caption_ysize ) / 3
sector_ysize2 = sector_ysize / 2
ampl = sector_ysize * 0.3
top_y = -hysize + caption_ysize

$frame_count = 0
$loop_len = 64 //number of frames
while 1
{
    clear( WHITE )
    
    $t = ( $frame_count % $loop_len ) / $loop_len
    $t2 = $t * M_PI * 2
    
    $oversampling = 8
    $i = 0 while $i < xsize * $oversampling
    {
	$i2 = $i / $oversampling
	$x = $i2 - hxsize
	$v1 = sin( $i2 / xsize * M_PI * 32 + $t2 )
	draw_antialiased_dot( $x, top_y + sector_ysize2 + $v1 * ampl, BLACK )
	$v2 = sin( $i2 / xsize * M_PI * 2 + $t2 )
	draw_antialiased_dot( $x, top_y + sector_ysize2 * 3 + $v2 * ampl, BLACK )
	transp( 16 )
	draw_antialiased_dot( $x, top_y + sector_ysize2 * 5 + $v2 * ampl, BLACK )
	transp( 255 )
	if MOD_TYPE == 1
	{
	    $v3 = $v1 * $v2
	}
	if MOD_TYPE == 2 || MOD_TYPE == 3
	{
	    $v3 = sin( $i2 / xsize * M_PI * 32 + $t2 + $v2 * M_PI * 3 )
	}
	draw_antialiased_dot( $x, top_y + sector_ysize2 * 5 + $v3 * ampl, BLACK )
	$i + 1
    }
    
    transp( 40 )
    fbox( -hxsize, top_y + sector_ysize2, xsize, 1, BLACK )
    fbox( -hxsize, top_y + sector_ysize2 * 3, xsize, 1, BLACK )
    fbox( -hxsize, top_y + sector_ysize2 * 5, xsize, 1, BLACK )
    transp( 255 )
    color_gradient( WHITE, 255, WHITE, 0, WHITE, 255, WHITE, 0, -hxsize, -hysize, 8 * 12, ysize )
    print( "CARRIER", -hxsize + 1, top_y + sector_ysize2, BLACK, LEFT )
    print( "MODULATOR", -hxsize + 1, top_y + sector_ysize2 * 3, BLACK, LEFT )
    print( "OUTPUT", -hxsize + 1, top_y + sector_ysize2 * 5, BLACK, LEFT )
    $name = "AMPLITUDE MODULATION\n(AM)"
    if MOD_TYPE == 2 { $name = "FREQUENCY MODULATION\n(FM)" }
    if MOD_TYPE == 3 { $name = "PHASE MODULATION" }
    print( $name, 0, -hysize + caption_ysize / 2, BLACK )
    transp( 64 )
    fbox( -hxsize, -hysize, xsize, caption_ysize, BLACK )
    transp( 255 )

    if GIF_EXPORT
    {
	if $frame_count < $loop_len
	{    
	    copy( anim, scr )
	    pack_frame( anim )
	    if $frame_count < $loop_len - 1
	    {
		clone_frame( anim )
		anim.frame + 1
	    }
	}
	else
	{
	    break
	}
    }
    
    while( get_event() ) { if EVT[ EVT_TYPE ] == EVT_QUIT { breakall } }
    if GIF_EXPORT
    {
	frame()
    }
    else
    {
	frame( 1000 / anim.fps )
    }
    $frame_count + 1
}

if GIF_EXPORT
{
    $name = "modulation_am.gif"
    if MOD_TYPE == 2 { $name = "modulation_fm.gif" }
    save( anim, $name, FORMAT_GIF )
    ts = "" sprintf( ts, "gifsicle -b -O3 -k 4 %s", $name ) system( ts )
}

fn draw_antialiased_dot( $x, $y, $color )
{
    $t = get_transp()
    $xx = ( $x + 1024 ) * 256
    $xc = $xx & 255
    $yy = ( $y + 1024 ) * 256
    $yc = $yy & 255
    $ycc = 255 - $yc
    $tx1 = 255 - $xc
    $tx2 = $xc
    $x = ( $xx >> 8 ) - 1024
    $y = ( $yy >> 8 ) - 1024
    transp( ( ( ( $tx1 * $ycc ) >> 8 ) * $t ) >> 8 )
    dot( $x, $y, $color )
    transp( ( ( ( $tx2 * $ycc ) >> 8 ) * $t ) >> 8 )
    dot( $x + 1, $y, $color )
    transp( ( ( ( $tx1 * $yc ) >> 8 ) * $t ) >> 8 )
    dot( $x, $y + 1, $color )
    transp( ( ( ( $tx2 * $yc ) >> 8 ) * $t ) >> 8 )
    dot( $x + 1, $y + 1, $color )
    transp( $t )
}

fn load_font()
{
    $f = load( "images/font8x8_2.png" )
    set_key_color( $f, BLACK )
    set_font( 0x20, $f, 16, 6 )

    $f = load( "images/font8x8_2_cyr.png" )
    set_key_color( $f, BLACK )
    set_font( 0x410, $f, 16, 4 )
}
