set_pixel_size( WINDOW_XSIZE / 480 )
resize( get_screen(), WINDOW_XSIZE, WINDOW_YSIZE )

scr = get_screen()
xsize = get_xsize( scr )
ysize = get_ysize( scr )
hxsize = f_xsize div 2
hysize = f_ysize div 2
f_scr = new( xsize / 2, ysize / 2, PIXEL )
f_xsize = get_xsize( f_scr )
f_ysize = get_ysize( f_scr )
f_hxsize = f_xsize div 2
f_hysize = f_ysize div 2

start_timer( 0 )

start:
    t = get_timer( 0 ) / 2000
    a = sin( -t ) * 128 |0
    b = cos( t ) * 128 |0
    magn = 128 + t * 8 |0
    xoff + 1 if xoff > 1 { yoff + 1 } xoff & 1 yoff & 1
    set_screen( f_scr )
    draw_fract()
    set_screen( scr )
    
    //transp( 128 )
    pixi( f_scr, 0, 0, WHITE, 2, 2 )
    //transp( 256 )

    ts = ""
    sprintf( ts, "FPS:%d", FPS )
    tx = -get_xsize( scr ) / 2 + 8
    ty = -get_ysize( scr ) / 2 + 8
    print( ts, tx, ty, WHITE, TOP | LEFT )

    while( get_event() ) { if EVT[ EVT_TYPE ] == EVT_QUIT { halt } }
    
    frame()
go start

fn draw_fract()
{
    y = -f_hysize + yoff while( y < f_hysize )
    {
	x = -f_hxsize + xoff while( x < f_hxsize )
	{
	    xx = ( x * magn ) >> 7
	    yy = ( y * magn ) >> 7
	    col = 0 while( col < 256 )
	    {
		xxx = ( xx * xx ) >> 7
		yyy = ( yy * yy ) >> 7
		if xxx + yyy > 4 * 128 { break }
		yy = ( ( xx * yy ) >> 6 ) + b
		xx = xxx - yyy + a
		col + 16
	    }
	    col + rand() & 7
	    dot( x, y, get_color( col, col, col * 4 ) )
	    x + 2
	}
	y + 2
    }
}
