<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        MCIPAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="txtSource.Text" xml:space="preserve">
    <value>open System

// [snippet:Declaration of a Hello type]
/// Says hello to the specified name
type Hello(name) = 
  member x.SayHello() = 
    Console.WriteLine("Hello " + name)
  member x.SayHelloLoud() = 
    (*[omit:(implementation omitted)]*)
    let msg = ("Hello " + name + "!!!").ToUpper()
    Console.WriteLine(msg)(*[/omit]*)
// [/snippet]

do
  // [snippet:Application entry point]
  let hello = new Hello("F#")
  hello.SayHello()
  // [/snippet]</value>
  </data>
</root>