package com.mg.groovy.samples.db

import java.sql.DriverManager
import groovy.sql.Sql

/**
 * AbstractDB.groovy
 *
 * @author Marcio Garcia - marcio@mangar.com.br
 */
public abstract class AbstractDB{
	
	
//    /**
//     * Java Way, via DriverManager
//     */
//	def getConnection() {
//		Class.forName("org.hsqldb.jdbcDriver").newInstance();
//		DriverManager.getConnection("jdbc:hsqldb:file:./src/com/mg/groovy/samples/db/testdb", "sa", "");
//	}
	
	/**
	 * Groovy DB connection via DriverManager
	 */
	def getConnection() {
		def db = Sql.newInstance( 
				'jdbc:hsqldb:file:./src/com/mg/groovy/samples/db/testdb', 
						'sa', 
						'', 
						'org.hsqldb.jdbcDriver') 
	}
	
	
	/**
	 * Groovy connection via DataSource
	 */
	def getDs() {
	    def source = new org.hsqldb.jdbc.jdbcDataSource() 
	    source.database = 'jdbc:hsqldb:file:./src/com/mg/groovy/samples/db/testdb' 
	    source.user     = 'sa' 
	    source.password = '' 
	    def db = new groovy.sql.Sql(source)
	}
	
	
	def setUp() {

	    def db = ds()
	    
	    println  "dropping table and index..."
	    db.execute '''
	    DROP   INDEX musicIdx IF EXISTS;
        DROP   TABLE musics    IF EXISTS;
	    '''
	    
	    println "re-criate table and index..."
	    db.execute ''' 
	    CREATE TABLE musics ( 
	        id   INTEGER GENERATED BY DEFAULT AS IDENTITY, 
	        artist VARCHAR(64),
	        name   VARCHAR(64), 
	        album    VARCHAR(64), 
	        date_launched DATE 
	    ); 
	    CREATE INDEX musicIdx ON musics (id); 
	    ''' 
	    
	    println "inserting some records..."
	    def sql_insert = "insert into musics(artist, album, name, date_launched) values(?, ?, ?, ?)"

	    db.execute sql_insert, ['AC/DC', 'Black Ice', '', '2008-12-01']
	    db.execute sql_insert, ['Gun N\' Roses', 'Chinise Democracy', '', '2008-12-01']

	    println "... setup concluded!\n"
	}
	
}
